outline:
	pre-meeting getting stuff installed
	
	Sam timeline:
		set up workspace
		terminal
		why git is important/ versioning control
			-explanation of Linus Torvald - how to manage a huge project
			-suggestion: how to avoid "shooting yourself in the foot"
			-keep a more hierarchical structure
			(collaboration with Jon?)
		
		VOLUNTEERS in this period make sure if people didn't attend 5-6 period
		they are set up correctly
		
		GitHub e 
	
	
	MATERIALS:
	provide red sticky notes for people requiring help
		software carpentry
		supplies to buy
	memo pads
	
	
	PREP:
		ensure attendees get/ have GitHub accounts
		check if Xcode is necessary for MacBook install
	
	
	Jon timeline:
		-how you would take a local and put it on GitHub
		-how you would check something out
			if you want a copy of somebody else's
			creating new repos and checking them out
		
		-examples of how to add access to other people
		
		-basic commands/ how those work thru GUI 
		
		-MOVE pull request/ merging pull requests up higher in Jon's section
		
		-example of rolling back (view in GUI)
		
		-conflicts:
			reconciling a change - how to view conflicts
			
			
		explanation of Open Source Projects
			example: Fedora project 
				how the UT Libraries uses/ contributes to it
			how to contribute - visit their website, contact the owner
				subscribe to list 
				how to add your own modules
					they were looking for someone to write a template model
				finding bugs
			example: Drupal online community - Ways to get involved
			vs. how to contribute to Apache and Linux (super structured)
			
			NOT JUST CODE also documentation
			
		Final summary of Jon's presentation:
			how to contribute
			best practices (as individual, in a workplace)
			
			